


USAGE

To encrypt, type: "-e " + "text*" + encryption_type + name_and_location_of_encrypted_file**
To decrypt, type: "-d " + "text*" + decryption_type + name_and_location_of_decrypted_file**

   *Type out the text in quotation marks or type "-i " followed by the file name and location(not in quotes)
       * Notes: File names should not contain spaces.
   **If no name and  location is given for the newly generated file, a default name and location will be given

To print out the available cipher types, type "help"
To exit the program, type "exit"
To clear files in decrypted and encrypted, type "clear"
To enter testing mode, enter "test"
    Testing mode usage:
        Type "set" followed by a file location to specify a plaintext. If not done, a default one is used
        Type the cipher type to run tests

Encryption/Decryption types available: vigenere, rotation, ...





EXAMPLES

"-e "qwertyuiop qwertyuiop" vigenere"
    This will encrypt the word "qwertyuiop qwertyuiop" using a vigenere cipher. A default name and location is provided
    for the generated file

"-e Library/plain.txt vigenere"
    This will encrypt plain.txt, which is located in Library, using a vigenere cipher. A default name and location is
    provided for the generated file

"-e Library/plain.txt vigenere Encrypted/vigenere_encrypted_plain.txt"
    This will encrypt plain.txt, which is located in Library, using a vigenere cipher. In addition, the name and
    location for the generated file is created.

"-d Encrypted/unknown_encrypted_plain.txt"
    This will attempt to decrypt unknown_encrypted_plain.txt using all methods. Use this when the method of encryption
    is unknown

"-d Encrypted/vigenere_encrypted_plain.txt"
    This will decrypt plain.txt using a vigenere cipher, with or without a key. Further instructions will be provided.




DOCUMENTATION

PROJECT STRUCTURE
    This project has four main components, as well as three folders for storage.

        The three main components are:
            -cryptography_runner.py - this file holds the main runner program that takes in user input, and performs the
                      encryption/decryption.
            -miscellanous.py - this file holds functions that may be useful anywhere. Mostly handles user input.
            -test.py - this file runs the decryption/encryption functions and tests for correctness and performance
            -package Decryption - this package holds all files necessary to perform a decryption
            -package Encryption - this package holds all files necessary to perform an encryption

        The three folders are:
            -Library - this folder stores all text files you want to use with this program
            -Files_Decrypted - this is where the generated decrypted files go
            -Files_Encrypted - this is where the generated encrypetd files go


CRYPTOGRAPHY_RUNNER.PY



MISCELLANEOUS.PY


TEST.PY


ENCRYPTION


    VIGENERE.PY - This is the regular vigenere that does what is expected

    VIGENERE_MULTIPLICATIVE.PY - This vigenere multiplies the character values instead of add. I added this to access
                                 more of the characters in unicode.* For ascii, and extended_ascii, the characters are
                                 displayed as numbers instead of in real characters, due to limitations.

          * Unicode has certain characters called surrogates. These are unprintable. As a result, I had to adjust my
          numbers so that any values that would match surrogates are pushed into the corresponding character. This
          corresponding character is as far away from the end of the surrogates as the "before" value is from the
          start of the surrogates

    VIGENERE_EXPONENTIAL.PY - This vigenere takes the plaintext value to the power of the keyword character value. This
                              results in a ciphertext whose characters are even more evenly distributed in unicode.





DECRYPTION